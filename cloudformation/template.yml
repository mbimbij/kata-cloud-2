Resources:
  Ec2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: katacloud ec2 security group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
  AlbSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: katacloud ALB  security group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
  MyLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: ami-0bed86967fc5d6e64
        InstanceType: t2.micro
        IamInstanceProfile:
          Arn: arn:aws:iam::870103585828:instance-profile/ec2-springboot-role
        SecurityGroups:
          - !Ref Ec2SecurityGroup
      LaunchTemplateName: katacloud-launchtemplate
  MyTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 10
      HealthCheckTimeoutSeconds: 5
      HealthCheckPath: /actuator/health
      #      HealthCheckPort: 8080
      #      HealthCheckProtocol: HTTP
      Name: MyTargets
      TargetType: instance
      Protocol: HTTP
      Port: 8080
      VpcId: vpc-051cdb07e1bfdf374
  MyAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones: !GetAZs eu-west-3
      HealthCheckGracePeriod: 60
      LaunchTemplate:
        LaunchTemplateId: !Ref MyLaunchTemplate
        Version: !GetAtt MyLaunchTemplate.LatestVersionNumber
      MinSize: '2'
      MaxSize: '2'
      TargetGroupARNs:
       - !Ref MyTargetGroup
  MyLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: MyLoadBalancer
      Scheme: internet-facing
#      SecurityGroups:
#        - !Ref AlbSecurityGroup
      Type: application
      Subnets:
        - subnet-0c35a5fee9be9c363
        - subnet-08596ca2aca26d7cf
        - subnet-06fc8fb43f9af176f
  HTTPlistener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: "forward"
          ForwardConfig:
            TargetGroups:
              - TargetGroupArn: !Ref MyTargetGroup
                Weight: 1
      LoadBalancerArn: !Ref MyLoadBalancer
      Port: 80
      Protocol: "HTTP"