Resources:
  Ec2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: katacloud ec2 security group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
  AlbSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: katacloud ALB  security group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
  MyLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: ami-0bed86967fc5d6e64
        InstanceType: t2.micro
        IamInstanceProfile:
          Arn: arn:aws:iam::870103585828:instance-profile/ec2-springboot-role
        SecurityGroups:
          - !Ref Ec2SecurityGroup
      LaunchTemplateName: katacloud-launchtemplate
  MyTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 10
      HealthCheckTimeoutSeconds: 5
      HealthCheckPath: /actuator/health
      #      HealthCheckPort: 8080
      #      HealthCheckProtocol: HTTP
      Name: MyTargets
      TargetType: instance
      Protocol: HTTP
      Port: 8080
      VpcId: vpc-051cdb07e1bfdf374
  MyAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones: !GetAZs eu-west-3
      HealthCheckGracePeriod: 60
      LaunchTemplate:
        LaunchTemplateId: !Ref MyLaunchTemplate
        Version: !GetAtt MyLaunchTemplate.LatestVersionNumber
      MinSize: '2'
      MaxSize: '2'
      TargetGroupARNs:
       - !Ref MyTargetGroup
  MyLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: MyLoadBalancer
      Scheme: internet-facing
#      SecurityGroups:
#        - !Ref AlbSecurityGroup
      Type: application
      Subnets:
        - subnet-0c35a5fee9be9c363
        - subnet-08596ca2aca26d7cf
        - subnet-06fc8fb43f9af176f
  MyLoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: "forward"
          ForwardConfig:
            TargetGroups:
              - TargetGroupArn: !Ref MyTargetGroup
                Weight: 1
      LoadBalancerArn: !Ref MyLoadBalancer
      Port: 80
      Protocol: "HTTP"
  DBEC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Open database for access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '3306'
          ToPort: '3306'
          SourceSecurityGroupName:
            Ref: Ec2SecurityGroup
  DBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBName: mysqlInstance
      Engine: MySQL
      MasterUsername: admin
      DBInstanceClass: db.t2.micro
      VPCSecurityGroups:
        - !GetAtt DBEC2SecurityGroup.GroupId
      AllocatedStorage: 5
      MasterUserPassword: password
  DBUrl:
    Type: AWS::SSM::Parameter
    Properties:
      Name: '/my-app/dev/db-url'
      Type: String
      Value:
        !Join
        - ''
        - - 'jdbc:mysql://'
          - !GetAtt DBInstance.Endpoint.Address
          - ':'
          - !GetAtt DBInstance.Endpoint.Port
          - '/myapp?createDatabaseIfNotExist=true&serverTimezone=UTC'
      Description: SSM Parameter for database jdbc url
  MyCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: my-codebuild-project
      Source:
        Type: GITHUB
        Location: https://github.com/mbimbij/kata-cloud-2.git
#        SourceAuth:
#          Type: OAUTH
      Artifacts:
        Type: NO_ARTIFACTS
      ServiceRole: arn:aws:iam::870103585828:role/service-role/codebuild-my-build-project-role
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
  MyCodeDeployApplication:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: my-code-deploy-application
      ComputePlatform: Server
  MyCodeDeployDeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      ApplicationName: !Ref MyCodeDeployApplication
      ServiceRoleArn: arn:aws:iam::870103585828:role/codedeploy-service-role
      DeploymentGroupName: my-deployment-group
      DeploymentConfigName: CodeDeployDefault.OneAtATime
      AutoScalingGroups:
        - !Ref MyAutoScalingGroup
      DeploymentStyle:
        DeploymentType: IN_PLACE
        DeploymentOption: WITH_TRAFFIC_CONTROL
      LoadBalancerInfo:
        TargetGroupInfoList:
          - Name: !GetAtt MyTargetGroup.TargetGroupName
  MyPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: my-pipeline
      RoleArn: arn:aws:iam::870103585828:role/service-role/AWSCodePipelineServiceRole-eu-west-3-sb-asg
      ArtifactStore:
        Type: S3
        Location: codepipeline-eu-west-3-971233115494
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeStarSourceConnection
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                ConnectionArn: arn:aws:codestar-connections:eu-west-3:870103585828:connection/d44a0224-7933-485e-b01b-957c93db9794
                FullRepositoryId: "mbimbij/kata-cloud-2"
                BranchName: "main"
                OutputArtifactFormat: "CODE_ZIP"
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BuildOutput
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName:
                  Ref: MyCodeBuildProject
              RunOrder: 1
        - Name: Release
          Actions:
            - Name: ReleaseAction
              InputArtifacts:
                - Name: SourceOutput
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CodeDeploy
              Configuration:
                ApplicationName:
                  Ref: MyCodeDeployApplication
                DeploymentGroupName:
                  Ref: MyCodeDeployDeploymentGroup
              RunOrder: 1